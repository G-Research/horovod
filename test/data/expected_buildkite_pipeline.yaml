steps:
- label: ':docker: Build test-cpu-openmpi-py3_6-tf1_6_0-keras2_1_2-torch0_4_1-mxnet1_4_1-pyspark2_3_2'
  plugins:
  - docker-compose#6b0df8a98ff97f42f4944dbb745b5b8cbf04b78c:
      build: test-cpu-openmpi-py3_6-tf1_6_0-keras2_1_2-torch0_4_1-mxnet1_4_1-pyspark2_3_2
      image-repository: 823773083436.dkr.ecr.us-east-1.amazonaws.com/buildkite
      cache-from: test-cpu-openmpi-py3_6-tf1_6_0-keras2_1_2-torch0_4_1-mxnet1_4_1-pyspark2_3_2:823773083436.dkr.ecr.us-east-1.amazonaws.com/buildkite:SLUG-test-cpu-openmpi-py3_6-tf1_6_0-keras2_1_2-torch0_4_1-mxnet1_4_1-pyspark2_3_2-latest
      config: docker-compose.test.yml
      push-retries: 5
  - ecr#v1.2.0:
      login: true
  timeout_in_minutes: 30
  retry:
    automatic: true
  agents:
    queue: cpu
- label: ':book: Build Docs'
  command: 'cd /workdir/docs && pip install -r requirements.txt && make html'
  plugins:
  - docker#v3.1.0:
      image: 'python:3.7'
  timeout_in_minutes: 5
  retry:
    automatic: true
  agents:
    queue: cpu
- wait
- label: ':pytest: Run PyTests (test-cpu-openmpi-py3_6-tf1_6_0-keras2_1_2-torch0_4_1-mxnet1_4_1-pyspark2_3_2)'
  command: bash -c " cd /horovod/test && (echo test_*.py | sed 's/[a-z_]*tensorflow2[a-z_.]*//g' | sed 's/test_interactiverun.py//g' | sed 's/test_spark_keras.py//g' | sed 's/test_spark_torch.py//g' | sed 's/test_spark.py//g' | sed 's/test_run.py//g' | xargs -n 1 \$(cat /mpirun_command) pytest -v --capture=no) && pytest --forked -v --capture=fd test_spark.py test_run.py && cd integration"
  plugins:
  - docker-compose#v2.6.0:
      run: test-cpu-openmpi-py3_6-tf1_6_0-keras2_1_2-torch0_4_1-mxnet1_4_1-pyspark2_3_2
      config: docker-compose.test.yml
      pull-retries: 3
  - ecr#v1.2.0:
      login: true
  timeout_in_minutes: 10
  retry:
    automatic: true
  agents:
    queue: cpu
